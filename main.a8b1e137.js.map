{"version":3,"sources":["scripts/main.js"],"names":["getEmployees","list","rightObjects","employee","obj","name","innerHTML","position","dataset","salary","age","trim","split","slice","join","Number","push","sortList","sort","a","b","liArray","document","querySelectorAll","arrayOfObjects","sortedEmployees","ul","querySelector","map"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjCA,IAAMA,EAAe,SAAAC,GACbC,IADqB,EACrBA,EAAe,GAEED,EAAAA,EAAAA,GAHI,IAGE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBE,IAAAA,EAAkB,EAAA,MACrBC,EAAM,CACVC,KAAMF,EAASG,UACfC,SAAUJ,EAASK,QAAQD,SAC3BE,OAAQN,EAASK,QAAQC,OACzBC,IAAKP,EAASK,QAAQE,KAGxBN,EAAIC,KAAOD,EAAIC,KAAKM,OACpBP,EAAIK,OAASL,EAAIK,OAAOG,MAAM,IAAIC,MAAM,GAAGC,KAAK,IAAIF,MAAM,KAAKE,KAAK,IACpEV,EAAIK,OAASM,OAAOX,EAAIK,QAExBP,EAAac,KAAKZ,IAfO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAkBpBF,OAAAA,GAGHe,EAAW,SAAAhB,GACRA,OAAAA,EAAKiB,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEX,OAASU,EAAEV,UAIpCY,EAAUC,SAASC,iBAAiB,mBAEpCC,EAAiBxB,EAAaqB,GAC9BI,EAAkBR,EAASO,GAE3BE,EAAKJ,SAASK,cAAc,MAElCD,EAAGpB,UACCmB,OAAAA,OAAAA,EAAgBG,IAAI,SAAAzB,GAEDA,MAAAA,mCAAAA,OAAAA,EAASI,SACVJ,2BAAAA,OAAAA,EAASM,OACbN,uBAAAA,OAAAA,EAASO,IAEnBP,oBAAAA,OAAAA,EAASE,KANe,iBAOpBS,KAAK,IARjB","file":"main.a8b1e137.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n// Calculating functions\n\nconst getEmployees = list => {\n  const rightObjects = [];\n\n  for (const employee of list) {\n    const obj = {\n      name: employee.innerHTML,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n\n    obj.name = obj.name.trim();\n    obj.salary = obj.salary.split('').slice(1).join('').split(',').join('');\n    obj.salary = Number(obj.salary);\n\n    rightObjects.push(obj);\n  }\n\n  return rightObjects;\n};\n\nconst sortList = list => {\n  return list.sort((a, b) => b.salary - a.salary);\n};\n\n// Main code\nconst liArray = document.querySelectorAll('li[data-salary]');\n\nconst arrayOfObjects = getEmployees(liArray);\nconst sortedEmployees = sortList(arrayOfObjects);\n\nconst ul = document.querySelector('ul');\n\nul.innerHTML = `\n  ${sortedEmployees.map(employee => `\n    <li\n      data-position=\"${employee.position}\"\n      data-salary=\"$${employee.salary}\"\n      data-age=\"${employee.age}\"\n    >\n      ${employee.name}\n    </li>`).join('')}\n`;\n"]}